1 : void main(int argc, char *argv[]) {
2 :   int done = 0; // Be 1 when receives a kill signal.
3 :   int nworkers = atoi(argv[1]);
4 :   pthread_create(..., NULL, listener, NULL);
5 :   for (i = 0; i < nworkers; ++i)
6 :     pthread_create(..., NULL, worker, NULL);
7 :   ...; // Wait for threads to exit.
8 : }
9 : void *listener(void *arg) {
10:   ...; // Call bind() and listen().
11:   while (!done && poll(...)) {
12:       int sock = accept(...);
13:       worklist.add(sock);
14:   }
15: }
16: void *worker(void *arg) {
17:   while(!done && int sock = worklist.get()) {
18:     recv(sock, buf, ...);
19:     process_req(buf);
20:   } 
21: }
